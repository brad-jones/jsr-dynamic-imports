# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev
version: "3"

dotenv: [".env"]
set: [pipefail]
shopt: [globstar]

tasks:
  init:
    desc: Setup local dev env
    summary: |
      This is executed automatically by pixi.
      ie: When run `pixi run code`, this task will run just before opening VsCode.
    cmds:
      - lefthook install -f
      - git config pull.rebase true
      - git config core.editor "code --wait"
      - git config commit.template "$PWD/.gitmsgtpl"
      - deno install {{if .CI}}--frozen{{end}}
      - "{{if .CI}}git config --global user.name github-actions[bot]{{end}}"
      - "{{if .CI}}git config --global user.email github-actions[bot]@users.noreply.github.com{{end}}"

  lint:
    dir: ./packages/jsr
    cmds:
      - deno publish --dry-run --allow-dirty

  package:
    desc: This is triggered by cog as a pre_bump_hook to generate all the final publishable artifacts
    deps:
      - lint
    requires:
      vars:
        - VERSION
    cmds:
      - deno run -A ./packages/npm/scripts/dnt.ts ./packages/npm/publish/node/package {{.VERSION}}
      - >-
          echo '
            const config = JSON.parse(Deno.readTextFileSync("./packages/jsr/deno.json"));
            config.version = "{{.VERSION}}";
            config.imports["@brad-jones/jsr-dynamic-imports"] = "npm:@brad-jones/jsr-dynamic-imports@{{.VERSION}}";
            Deno.writeTextFileSync("./packages/jsr/deno.json", JSON.stringify(config, null, 2));
          ' | deno run -A -

  publish:
    desc: This is triggered by cog as a post_bump_hook to publish all the final publishable artifacts
    requires:
      vars:
        - VERSION
    cmds:
      - cd ./packages/npm/publish/node/package && npm publish --provenance --access public && cd -
      - wait-for-npm-package.ts @brad-jones/jsr-dynamic-imports {{.VERSION}}
      - cd ./packages/jsr && deno publish --allow-dirty && cd -
      - git push && git push --tags
      - cog changelog --at v{{.VERSION}} > GITHUB_CHANGELOG.md
      - gh release create v{{.VERSION}} -F GITHUB_CHANGELOG.md

  test:
    dir: ./packages/jsr
    cmds:
      - deno test -A
